// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/interactor/agent_staff_monthly_sale.go
//
// Generated by this command:
//
//	mockgen -source ./usecase/interactor/agent_staff_monthly_sale.go -destination ./mock/mock_interactor/mock_agent_staff_monthly_sale.go
//

// Package mock_interactor is a generated GoMock package.
package mock_interactor

import (
	reflect "reflect"

	interactor "github.com/spaceaiinc/autoscout-server/usecase/interactor"
	gomock "go.uber.org/mock/gomock"
)

// MockAgentStaffMonthlySaleInteractor is a mock of AgentStaffMonthlySaleInteractor interface.
type MockAgentStaffMonthlySaleInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockAgentStaffMonthlySaleInteractorMockRecorder
}

// MockAgentStaffMonthlySaleInteractorMockRecorder is the mock recorder for MockAgentStaffMonthlySaleInteractor.
type MockAgentStaffMonthlySaleInteractorMockRecorder struct {
	mock *MockAgentStaffMonthlySaleInteractor
}

// NewMockAgentStaffMonthlySaleInteractor creates a new mock instance.
func NewMockAgentStaffMonthlySaleInteractor(ctrl *gomock.Controller) *MockAgentStaffMonthlySaleInteractor {
	mock := &MockAgentStaffMonthlySaleInteractor{ctrl: ctrl}
	mock.recorder = &MockAgentStaffMonthlySaleInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgentStaffMonthlySaleInteractor) EXPECT() *MockAgentStaffMonthlySaleInteractorMockRecorder {
	return m.recorder
}

// CreateAgentStaffMonthlySale mocks base method.
func (m *MockAgentStaffMonthlySaleInteractor) CreateAgentStaffMonthlySale(input interactor.CreateAgentStaffMonthlySaleInput) (interactor.CreateAgentStaffMonthlySaleOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAgentStaffMonthlySale", input)
	ret0, _ := ret[0].(interactor.CreateAgentStaffMonthlySaleOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAgentStaffMonthlySale indicates an expected call of CreateAgentStaffMonthlySale.
func (mr *MockAgentStaffMonthlySaleInteractorMockRecorder) CreateAgentStaffMonthlySale(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAgentStaffMonthlySale", reflect.TypeOf((*MockAgentStaffMonthlySaleInteractor)(nil).CreateAgentStaffMonthlySale), input)
}

// GetStaffMonthlySaleList mocks base method.
func (m *MockAgentStaffMonthlySaleInteractor) GetStaffMonthlySaleList(input interactor.GetStaffMonthlySaleListInput) (interactor.GetStaffMonthlySaleListOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStaffMonthlySaleList", input)
	ret0, _ := ret[0].(interactor.GetStaffMonthlySaleListOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStaffMonthlySaleList indicates an expected call of GetStaffMonthlySaleList.
func (mr *MockAgentStaffMonthlySaleInteractorMockRecorder) GetStaffMonthlySaleList(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStaffMonthlySaleList", reflect.TypeOf((*MockAgentStaffMonthlySaleInteractor)(nil).GetStaffMonthlySaleList), input)
}

// GetStaffSaleManagementAndAgentMonthlyByID mocks base method.
func (m *MockAgentStaffMonthlySaleInteractor) GetStaffSaleManagementAndAgentMonthlyByID(input interactor.GetStaffSaleManagementAndAgentMonthlyByIDInput) (interactor.GetStaffSaleManagementAndAgentMonthlyByIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStaffSaleManagementAndAgentMonthlyByID", input)
	ret0, _ := ret[0].(interactor.GetStaffSaleManagementAndAgentMonthlyByIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStaffSaleManagementAndAgentMonthlyByID indicates an expected call of GetStaffSaleManagementAndAgentMonthlyByID.
func (mr *MockAgentStaffMonthlySaleInteractorMockRecorder) GetStaffSaleManagementAndAgentMonthlyByID(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStaffSaleManagementAndAgentMonthlyByID", reflect.TypeOf((*MockAgentStaffMonthlySaleInteractor)(nil).GetStaffSaleManagementAndAgentMonthlyByID), input)
}

// UpdateAgentStaffMonthlySale mocks base method.
func (m *MockAgentStaffMonthlySaleInteractor) UpdateAgentStaffMonthlySale(input interactor.UpdateAgentStaffMonthlySaleInput) (interactor.UpdateAgentStaffMonthlySaleOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentStaffMonthlySale", input)
	ret0, _ := ret[0].(interactor.UpdateAgentStaffMonthlySaleOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAgentStaffMonthlySale indicates an expected call of UpdateAgentStaffMonthlySale.
func (mr *MockAgentStaffMonthlySaleInteractorMockRecorder) UpdateAgentStaffMonthlySale(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentStaffMonthlySale", reflect.TypeOf((*MockAgentStaffMonthlySaleInteractor)(nil).UpdateAgentStaffMonthlySale), input)
}
