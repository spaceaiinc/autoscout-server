// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/interactor/agent_inflow_channel_option.go
//
// Generated by this command:
//
//	mockgen -source ./usecase/interactor/agent_inflow_channel_option.go -destination ./mock/mock_interactor/mock_agent_inflow_channel_option.go
//

// Package mock_interactor is a generated GoMock package.
package mock_interactor

import (
	reflect "reflect"

	interactor "github.com/spaceaiinc/autoscout-server/usecase/interactor"
	gomock "go.uber.org/mock/gomock"
)

// MockAgentInflowChannelOptionInteractor is a mock of AgentInflowChannelOptionInteractor interface.
type MockAgentInflowChannelOptionInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockAgentInflowChannelOptionInteractorMockRecorder
}

// MockAgentInflowChannelOptionInteractorMockRecorder is the mock recorder for MockAgentInflowChannelOptionInteractor.
type MockAgentInflowChannelOptionInteractorMockRecorder struct {
	mock *MockAgentInflowChannelOptionInteractor
}

// NewMockAgentInflowChannelOptionInteractor creates a new mock instance.
func NewMockAgentInflowChannelOptionInteractor(ctrl *gomock.Controller) *MockAgentInflowChannelOptionInteractor {
	mock := &MockAgentInflowChannelOptionInteractor{ctrl: ctrl}
	mock.recorder = &MockAgentInflowChannelOptionInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgentInflowChannelOptionInteractor) EXPECT() *MockAgentInflowChannelOptionInteractorMockRecorder {
	return m.recorder
}

// CreateAgentInflowChannelOption mocks base method.
func (m *MockAgentInflowChannelOptionInteractor) CreateAgentInflowChannelOption(input interactor.CreateAgentInflowChannelOptionInput) (interactor.CreateAgentInflowChannelOptionByIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAgentInflowChannelOption", input)
	ret0, _ := ret[0].(interactor.CreateAgentInflowChannelOptionByIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAgentInflowChannelOption indicates an expected call of CreateAgentInflowChannelOption.
func (mr *MockAgentInflowChannelOptionInteractorMockRecorder) CreateAgentInflowChannelOption(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAgentInflowChannelOption", reflect.TypeOf((*MockAgentInflowChannelOptionInteractor)(nil).CreateAgentInflowChannelOption), input)
}

// GetAgentInflowChannelOptionByID mocks base method.
func (m *MockAgentInflowChannelOptionInteractor) GetAgentInflowChannelOptionByID(input interactor.GetAgentInflowChannelOptionByIDInput) (interactor.GetAgentInflowChannelOptionByIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentInflowChannelOptionByID", input)
	ret0, _ := ret[0].(interactor.GetAgentInflowChannelOptionByIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentInflowChannelOptionByID indicates an expected call of GetAgentInflowChannelOptionByID.
func (mr *MockAgentInflowChannelOptionInteractorMockRecorder) GetAgentInflowChannelOptionByID(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentInflowChannelOptionByID", reflect.TypeOf((*MockAgentInflowChannelOptionInteractor)(nil).GetAgentInflowChannelOptionByID), input)
}

// GetAgentInflowChannelOptionListByAgentID mocks base method.
func (m *MockAgentInflowChannelOptionInteractor) GetAgentInflowChannelOptionListByAgentID(input interactor.GetAgentInflowChannelOptionListByAgentIDInput) (interactor.GetAgentInflowChannelOptionListByAgentIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentInflowChannelOptionListByAgentID", input)
	ret0, _ := ret[0].(interactor.GetAgentInflowChannelOptionListByAgentIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentInflowChannelOptionListByAgentID indicates an expected call of GetAgentInflowChannelOptionListByAgentID.
func (mr *MockAgentInflowChannelOptionInteractorMockRecorder) GetAgentInflowChannelOptionListByAgentID(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentInflowChannelOptionListByAgentID", reflect.TypeOf((*MockAgentInflowChannelOptionInteractor)(nil).GetAgentInflowChannelOptionListByAgentID), input)
}

// UpdateAgentInflowChannelOption mocks base method.
func (m *MockAgentInflowChannelOptionInteractor) UpdateAgentInflowChannelOption(input interactor.UpdateAgentInflowChannelOptionInput) (interactor.UpdateAgentInflowChannelOptionByIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentInflowChannelOption", input)
	ret0, _ := ret[0].(interactor.UpdateAgentInflowChannelOptionByIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAgentInflowChannelOption indicates an expected call of UpdateAgentInflowChannelOption.
func (mr *MockAgentInflowChannelOptionInteractorMockRecorder) UpdateAgentInflowChannelOption(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentInflowChannelOption", reflect.TypeOf((*MockAgentInflowChannelOptionInteractor)(nil).UpdateAgentInflowChannelOption), input)
}
