// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/interactor/deployment_reflection.go
//
// Generated by this command:
//
//	mockgen -source ./usecase/interactor/deployment_reflection.go -destination ./mock/mock_interactor/mock_deployment_reflection.go
//

// Package mock_interactor is a generated GoMock package.
package mock_interactor

import (
	reflect "reflect"

	interactor "github.com/spaceaiinc/autoscout-server/usecase/interactor"
	gomock "go.uber.org/mock/gomock"
)

// MockDeploymentReflectionInteractor is a mock of DeploymentReflectionInteractor interface.
type MockDeploymentReflectionInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentReflectionInteractorMockRecorder
}

// MockDeploymentReflectionInteractorMockRecorder is the mock recorder for MockDeploymentReflectionInteractor.
type MockDeploymentReflectionInteractorMockRecorder struct {
	mock *MockDeploymentReflectionInteractor
}

// NewMockDeploymentReflectionInteractor creates a new mock instance.
func NewMockDeploymentReflectionInteractor(ctrl *gomock.Controller) *MockDeploymentReflectionInteractor {
	mock := &MockDeploymentReflectionInteractor{ctrl: ctrl}
	mock.recorder = &MockDeploymentReflectionInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeploymentReflectionInteractor) EXPECT() *MockDeploymentReflectionInteractorMockRecorder {
	return m.recorder
}

// CheckDeploymentReflection mocks base method.
func (m *MockDeploymentReflectionInteractor) CheckDeploymentReflection(input interactor.CheckDeploymentReflectionInput) (interactor.CheckDeploymentReflectionOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckDeploymentReflection", input)
	ret0, _ := ret[0].(interactor.CheckDeploymentReflectionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckDeploymentReflection indicates an expected call of CheckDeploymentReflection.
func (mr *MockDeploymentReflectionInteractorMockRecorder) CheckDeploymentReflection(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckDeploymentReflection", reflect.TypeOf((*MockDeploymentReflectionInteractor)(nil).CheckDeploymentReflection), input)
}

// CreateDeploymentInformation mocks base method.
func (m *MockDeploymentReflectionInteractor) CreateDeploymentInformation(input interactor.CreateDeploymentInformationInput) (interactor.CreateDeploymentInformationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDeploymentInformation", input)
	ret0, _ := ret[0].(interactor.CreateDeploymentInformationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDeploymentInformation indicates an expected call of CreateDeploymentInformation.
func (mr *MockDeploymentReflectionInteractorMockRecorder) CreateDeploymentInformation(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDeploymentInformation", reflect.TypeOf((*MockDeploymentReflectionInteractor)(nil).CreateDeploymentInformation), input)
}

// GetAllDeploymentInformations mocks base method.
func (m *MockDeploymentReflectionInteractor) GetAllDeploymentInformations(input interactor.GetAllDeploymentInformationsInput) (interactor.GetAllDeploymentInformationsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllDeploymentInformations", input)
	ret0, _ := ret[0].(interactor.GetAllDeploymentInformationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllDeploymentInformations indicates an expected call of GetAllDeploymentInformations.
func (mr *MockDeploymentReflectionInteractorMockRecorder) GetAllDeploymentInformations(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllDeploymentInformations", reflect.TypeOf((*MockDeploymentReflectionInteractor)(nil).GetAllDeploymentInformations), input)
}

// UpdateDeployMenConfirmStatusByStaffID mocks base method.
func (m *MockDeploymentReflectionInteractor) UpdateDeployMenConfirmStatusByStaffID(input interactor.UpdateDeployMenConfirmStatusByStaffIDInput) (interactor.UpdateDeployMenConfirmStatusByStaffIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDeployMenConfirmStatusByStaffID", input)
	ret0, _ := ret[0].(interactor.UpdateDeployMenConfirmStatusByStaffIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateDeployMenConfirmStatusByStaffID indicates an expected call of UpdateDeployMenConfirmStatusByStaffID.
func (mr *MockDeploymentReflectionInteractorMockRecorder) UpdateDeployMenConfirmStatusByStaffID(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDeployMenConfirmStatusByStaffID", reflect.TypeOf((*MockDeploymentReflectionInteractor)(nil).UpdateDeployMenConfirmStatusByStaffID), input)
}

// UpdateDeploymentInformation mocks base method.
func (m *MockDeploymentReflectionInteractor) UpdateDeploymentInformation(input interactor.UpdateDeploymentInformationInput) (interactor.UpdateDeploymentInformationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDeploymentInformation", input)
	ret0, _ := ret[0].(interactor.UpdateDeploymentInformationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateDeploymentInformation indicates an expected call of UpdateDeploymentInformation.
func (mr *MockDeploymentReflectionInteractorMockRecorder) UpdateDeploymentInformation(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDeploymentInformation", reflect.TypeOf((*MockDeploymentReflectionInteractor)(nil).UpdateDeploymentInformation), input)
}
