// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/interactor/schedule.go
//
// Generated by this command:
//
//	mockgen -source ./usecase/interactor/schedule.go -destination ./mock/mock_interactor/mock_schedule.go
//

// Package mock_interactor is a generated GoMock package.
package mock_interactor

import (
	reflect "reflect"

	interactor "github.com/spaceaiinc/autoscout-server/usecase/interactor"
	gomock "go.uber.org/mock/gomock"
)

// MockScheduleInteractor is a mock of ScheduleInteractor interface.
type MockScheduleInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockScheduleInteractorMockRecorder
}

// MockScheduleInteractorMockRecorder is the mock recorder for MockScheduleInteractor.
type MockScheduleInteractorMockRecorder struct {
	mock *MockScheduleInteractor
}

// NewMockScheduleInteractor creates a new mock instance.
func NewMockScheduleInteractor(ctrl *gomock.Controller) *MockScheduleInteractor {
	mock := &MockScheduleInteractor{ctrl: ctrl}
	mock.recorder = &MockScheduleInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScheduleInteractor) EXPECT() *MockScheduleInteractorMockRecorder {
	return m.recorder
}

// GetScheduleListWithInPeriod mocks base method.
func (m *MockScheduleInteractor) GetScheduleListWithInPeriod(input interactor.GetScheduleListWithInPeriodInput) (interactor.GetScheduleListWithInPeriodOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScheduleListWithInPeriod", input)
	ret0, _ := ret[0].(interactor.GetScheduleListWithInPeriodOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScheduleListWithInPeriod indicates an expected call of GetScheduleListWithInPeriod.
func (mr *MockScheduleInteractorMockRecorder) GetScheduleListWithInPeriod(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScheduleListWithInPeriod", reflect.TypeOf((*MockScheduleInteractor)(nil).GetScheduleListWithInPeriod), input)
}

// GetScheduleListWithInPeriodByStaffIDList mocks base method.
func (m *MockScheduleInteractor) GetScheduleListWithInPeriodByStaffIDList(input interactor.GetScheduleListWithInPeriodByStaffIDListInput) (interactor.GetScheduleListWithInPeriodByStaffIDListOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScheduleListWithInPeriodByStaffIDList", input)
	ret0, _ := ret[0].(interactor.GetScheduleListWithInPeriodByStaffIDListOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScheduleListWithInPeriodByStaffIDList indicates an expected call of GetScheduleListWithInPeriodByStaffIDList.
func (mr *MockScheduleInteractorMockRecorder) GetScheduleListWithInPeriodByStaffIDList(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScheduleListWithInPeriodByStaffIDList", reflect.TypeOf((*MockScheduleInteractor)(nil).GetScheduleListWithInPeriodByStaffIDList), input)
}
