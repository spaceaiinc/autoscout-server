// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/interactor/dashboard.go
//
// Generated by this command:
//
//	mockgen -source ./usecase/interactor/dashboard.go -destination ./mock/mock_interactor/mock_dashboard.go
//

// Package mock_interactor is a generated GoMock package.
package mock_interactor

import (
	reflect "reflect"

	interactor "github.com/spaceaiinc/autoscout-server/usecase/interactor"
	gomock "go.uber.org/mock/gomock"
)

// MockDashboardInteractor is a mock of DashboardInteractor interface.
type MockDashboardInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockDashboardInteractorMockRecorder
}

// MockDashboardInteractorMockRecorder is the mock recorder for MockDashboardInteractor.
type MockDashboardInteractorMockRecorder struct {
	mock *MockDashboardInteractor
}

// NewMockDashboardInteractor creates a new mock instance.
func NewMockDashboardInteractor(ctrl *gomock.Controller) *MockDashboardInteractor {
	mock := &MockDashboardInteractor{ctrl: ctrl}
	mock.recorder = &MockDashboardInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDashboardInteractor) EXPECT() *MockDashboardInteractorMockRecorder {
	return m.recorder
}

// ExportAccuracyCSV mocks base method.
func (m *MockDashboardInteractor) ExportAccuracyCSV(input interactor.ExportAccuracyCSVInput) (interactor.ExportAccuracyCSVOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportAccuracyCSV", input)
	ret0, _ := ret[0].(interactor.ExportAccuracyCSVOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExportAccuracyCSV indicates an expected call of ExportAccuracyCSV.
func (mr *MockDashboardInteractorMockRecorder) ExportAccuracyCSV(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportAccuracyCSV", reflect.TypeOf((*MockDashboardInteractor)(nil).ExportAccuracyCSV), input)
}

// GetDashboardForDefaultPreview mocks base method.
func (m *MockDashboardInteractor) GetDashboardForDefaultPreview(input interactor.GetDashboardForDefaultPreviewInput) (interactor.GetDashboardForDefaultPreviewOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDashboardForDefaultPreview", input)
	ret0, _ := ret[0].(interactor.GetDashboardForDefaultPreviewOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDashboardForDefaultPreview indicates an expected call of GetDashboardForDefaultPreview.
func (mr *MockDashboardInteractorMockRecorder) GetDashboardForDefaultPreview(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDashboardForDefaultPreview", reflect.TypeOf((*MockDashboardInteractor)(nil).GetDashboardForDefaultPreview), input)
}

// GetDashboardForSearch mocks base method.
func (m *MockDashboardInteractor) GetDashboardForSearch(input interactor.GetDashboardForSearchInput) (interactor.GetDashboardForSearchOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDashboardForSearch", input)
	ret0, _ := ret[0].(interactor.GetDashboardForSearchOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDashboardForSearch indicates an expected call of GetDashboardForSearch.
func (mr *MockDashboardInteractorMockRecorder) GetDashboardForSearch(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDashboardForSearch", reflect.TypeOf((*MockDashboardInteractor)(nil).GetDashboardForSearch), input)
}

// GetReleaseJobSeekerListForDefaultPreview mocks base method.
func (m *MockDashboardInteractor) GetReleaseJobSeekerListForDefaultPreview(input interactor.GetReleaseJobSeekerListForDefaultPreviewInput) (interactor.GetReleaseJobSeekerListForDefaultPreviewOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReleaseJobSeekerListForDefaultPreview", input)
	ret0, _ := ret[0].(interactor.GetReleaseJobSeekerListForDefaultPreviewOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReleaseJobSeekerListForDefaultPreview indicates an expected call of GetReleaseJobSeekerListForDefaultPreview.
func (mr *MockDashboardInteractorMockRecorder) GetReleaseJobSeekerListForDefaultPreview(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReleaseJobSeekerListForDefaultPreview", reflect.TypeOf((*MockDashboardInteractor)(nil).GetReleaseJobSeekerListForDefaultPreview), input)
}

// GetReleaseJobSeekerListForSearch mocks base method.
func (m *MockDashboardInteractor) GetReleaseJobSeekerListForSearch(input interactor.GetReleaseJobSeekerListForSearchInput) (interactor.GetReleaseJobSeekerListForSearchOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReleaseJobSeekerListForSearch", input)
	ret0, _ := ret[0].(interactor.GetReleaseJobSeekerListForSearchOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReleaseJobSeekerListForSearch indicates an expected call of GetReleaseJobSeekerListForSearch.
func (mr *MockDashboardInteractorMockRecorder) GetReleaseJobSeekerListForSearch(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReleaseJobSeekerListForSearch", reflect.TypeOf((*MockDashboardInteractor)(nil).GetReleaseJobSeekerListForSearch), input)
}

// GetSaleListForDefaultPreview mocks base method.
func (m *MockDashboardInteractor) GetSaleListForDefaultPreview(input interactor.GetSaleListForDefaultPreviewInput) (interactor.GetSaleListForDefaultPreviewOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSaleListForDefaultPreview", input)
	ret0, _ := ret[0].(interactor.GetSaleListForDefaultPreviewOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSaleListForDefaultPreview indicates an expected call of GetSaleListForDefaultPreview.
func (mr *MockDashboardInteractorMockRecorder) GetSaleListForDefaultPreview(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSaleListForDefaultPreview", reflect.TypeOf((*MockDashboardInteractor)(nil).GetSaleListForDefaultPreview), input)
}

// GetSaleListForSearch mocks base method.
func (m *MockDashboardInteractor) GetSaleListForSearch(input interactor.GetSaleListForSearchInput) (interactor.GetSaleListForSearchOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSaleListForSearch", input)
	ret0, _ := ret[0].(interactor.GetSaleListForSearchOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSaleListForSearch indicates an expected call of GetSaleListForSearch.
func (mr *MockDashboardInteractorMockRecorder) GetSaleListForSearch(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSaleListForSearch", reflect.TypeOf((*MockDashboardInteractor)(nil).GetSaleListForSearch), input)
}
