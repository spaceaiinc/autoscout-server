// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/interactor/agent_staff.go
//
// Generated by this command:
//
//	mockgen -source ./usecase/interactor/agent_staff.go -destination ./mock/mock_interactor/mock_agent_staff.go
//

// Package mock_interactor is a generated GoMock package.
package mock_interactor

import (
	reflect "reflect"

	interactor "github.com/spaceaiinc/autoscout-server/usecase/interactor"
	gomock "go.uber.org/mock/gomock"
)

// MockAgentStaffInteractor is a mock of AgentStaffInteractor interface.
type MockAgentStaffInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockAgentStaffInteractorMockRecorder
}

// MockAgentStaffInteractorMockRecorder is the mock recorder for MockAgentStaffInteractor.
type MockAgentStaffInteractorMockRecorder struct {
	mock *MockAgentStaffInteractor
}

// NewMockAgentStaffInteractor creates a new mock instance.
func NewMockAgentStaffInteractor(ctrl *gomock.Controller) *MockAgentStaffInteractor {
	mock := &MockAgentStaffInteractor{ctrl: ctrl}
	mock.recorder = &MockAgentStaffInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgentStaffInteractor) EXPECT() *MockAgentStaffInteractorMockRecorder {
	return m.recorder
}

// DeleteAgentStaff mocks base method.
func (m *MockAgentStaffInteractor) DeleteAgentStaff(input interactor.DeleteAgentStaffInput) (interactor.DeleteAgentStaffOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAgentStaff", input)
	ret0, _ := ret[0].(interactor.DeleteAgentStaffOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteAgentStaff indicates an expected call of DeleteAgentStaff.
func (mr *MockAgentStaffInteractorMockRecorder) DeleteAgentStaff(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAgentStaff", reflect.TypeOf((*MockAgentStaffInteractor)(nil).DeleteAgentStaff), input)
}

// GetAgentStaffListByAgentID mocks base method.
func (m *MockAgentStaffInteractor) GetAgentStaffListByAgentID(input interactor.GetAgentStaffListByAgentIDInput) (interactor.GetAgentStaffListByAgentIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentStaffListByAgentID", input)
	ret0, _ := ret[0].(interactor.GetAgentStaffListByAgentIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentStaffListByAgentID indicates an expected call of GetAgentStaffListByAgentID.
func (mr *MockAgentStaffInteractorMockRecorder) GetAgentStaffListByAgentID(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentStaffListByAgentID", reflect.TypeOf((*MockAgentStaffInteractor)(nil).GetAgentStaffListByAgentID), input)
}

// GetAgentStaffListByAgentIDAndIsDeletedFalse mocks base method.
func (m *MockAgentStaffInteractor) GetAgentStaffListByAgentIDAndIsDeletedFalse(input interactor.GetAgentStaffListByAgentIDAndIsDeletedFalseInput) (interactor.GetAgentStaffListByAgentIDAndIsDeletedFalseOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentStaffListByAgentIDAndIsDeletedFalse", input)
	ret0, _ := ret[0].(interactor.GetAgentStaffListByAgentIDAndIsDeletedFalseOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentStaffListByAgentIDAndIsDeletedFalse indicates an expected call of GetAgentStaffListByAgentIDAndIsDeletedFalse.
func (mr *MockAgentStaffInteractorMockRecorder) GetAgentStaffListByAgentIDAndIsDeletedFalse(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentStaffListByAgentIDAndIsDeletedFalse", reflect.TypeOf((*MockAgentStaffInteractor)(nil).GetAgentStaffListByAgentIDAndIsDeletedFalse), input)
}

// GetAgentStaffListByAgentIDAndUsageStatusAvailable mocks base method.
func (m *MockAgentStaffInteractor) GetAgentStaffListByAgentIDAndUsageStatusAvailable(input interactor.GetAgentStaffListByAgentIDAndUsageStatusAvailableInput) (interactor.GetAgentStaffListByAgentIDAndUsageStatusAvailableOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentStaffListByAgentIDAndUsageStatusAvailable", input)
	ret0, _ := ret[0].(interactor.GetAgentStaffListByAgentIDAndUsageStatusAvailableOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentStaffListByAgentIDAndUsageStatusAvailable indicates an expected call of GetAgentStaffListByAgentIDAndUsageStatusAvailable.
func (mr *MockAgentStaffInteractorMockRecorder) GetAgentStaffListByAgentIDAndUsageStatusAvailable(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentStaffListByAgentIDAndUsageStatusAvailable", reflect.TypeOf((*MockAgentStaffInteractor)(nil).GetAgentStaffListByAgentIDAndUsageStatusAvailable), input)
}

// GetAgentStaffListByAgentIDOrderByID mocks base method.
func (m *MockAgentStaffInteractor) GetAgentStaffListByAgentIDOrderByID(input interactor.GetAgentStaffListByAgentIDOrderByIDInput) (interactor.GetAgentStaffListByAgentIDOrderByIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentStaffListByAgentIDOrderByID", input)
	ret0, _ := ret[0].(interactor.GetAgentStaffListByAgentIDOrderByIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentStaffListByAgentIDOrderByID indicates an expected call of GetAgentStaffListByAgentIDOrderByID.
func (mr *MockAgentStaffInteractorMockRecorder) GetAgentStaffListByAgentIDOrderByID(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentStaffListByAgentIDOrderByID", reflect.TypeOf((*MockAgentStaffInteractor)(nil).GetAgentStaffListByAgentIDOrderByID), input)
}

// GetAgentStaffListWithSaleNotCreated mocks base method.
func (m *MockAgentStaffInteractor) GetAgentStaffListWithSaleNotCreated(input interactor.GetAgentStaffListWithSaleNotCreatedInput) (interactor.GetAgentStaffListWithSaleNotCreatedOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentStaffListWithSaleNotCreated", input)
	ret0, _ := ret[0].(interactor.GetAgentStaffListWithSaleNotCreatedOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentStaffListWithSaleNotCreated indicates an expected call of GetAgentStaffListWithSaleNotCreated.
func (mr *MockAgentStaffInteractorMockRecorder) GetAgentStaffListWithSaleNotCreated(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentStaffListWithSaleNotCreated", reflect.TypeOf((*MockAgentStaffInteractor)(nil).GetAgentStaffListWithSaleNotCreated), input)
}

// GetAgentStaffMe mocks base method.
func (m *MockAgentStaffInteractor) GetAgentStaffMe(input interactor.GetAgentStaffMeInput) (interactor.GetAgentStaffMeOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAgentStaffMe", input)
	ret0, _ := ret[0].(interactor.GetAgentStaffMeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAgentStaffMe indicates an expected call of GetAgentStaffMe.
func (mr *MockAgentStaffInteractorMockRecorder) GetAgentStaffMe(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAgentStaffMe", reflect.TypeOf((*MockAgentStaffInteractor)(nil).GetAgentStaffMe), input)
}

// GetAllAgentStaffList mocks base method.
func (m *MockAgentStaffInteractor) GetAllAgentStaffList() (interactor.GetAllAgentStaffListOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllAgentStaffList")
	ret0, _ := ret[0].(interactor.GetAllAgentStaffListOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllAgentStaffList indicates an expected call of GetAllAgentStaffList.
func (mr *MockAgentStaffInteractorMockRecorder) GetAllAgentStaffList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllAgentStaffList", reflect.TypeOf((*MockAgentStaffInteractor)(nil).GetAllAgentStaffList))
}

// GetOhterAgentStaffListByAgentIDAndAllianceAgentID mocks base method.
func (m *MockAgentStaffInteractor) GetOhterAgentStaffListByAgentIDAndAllianceAgentID(input interactor.GetOhterAgentStaffListByAgentIDAndAllianceAgentIDInput) (interactor.GetOhterAgentStaffListByAgentIDAndAllianceAgentIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOhterAgentStaffListByAgentIDAndAllianceAgentID", input)
	ret0, _ := ret[0].(interactor.GetOhterAgentStaffListByAgentIDAndAllianceAgentIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOhterAgentStaffListByAgentIDAndAllianceAgentID indicates an expected call of GetOhterAgentStaffListByAgentIDAndAllianceAgentID.
func (mr *MockAgentStaffInteractorMockRecorder) GetOhterAgentStaffListByAgentIDAndAllianceAgentID(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOhterAgentStaffListByAgentIDAndAllianceAgentID", reflect.TypeOf((*MockAgentStaffInteractor)(nil).GetOhterAgentStaffListByAgentIDAndAllianceAgentID), input)
}

// SignUpForAdmin mocks base method.
func (m *MockAgentStaffInteractor) SignUpForAdmin(input interactor.AgentStaffSignUpForAdminInput) (interactor.AgentStaffSignUpForAdminOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignUpForAdmin", input)
	ret0, _ := ret[0].(interactor.AgentStaffSignUpForAdminOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignUpForAdmin indicates an expected call of SignUpForAdmin.
func (mr *MockAgentStaffInteractorMockRecorder) SignUpForAdmin(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignUpForAdmin", reflect.TypeOf((*MockAgentStaffInteractor)(nil).SignUpForAdmin), input)
}

// UpdateAgentStaff mocks base method.
func (m *MockAgentStaffInteractor) UpdateAgentStaff(input interactor.UpdateAgentStaffInput) (interactor.UpdateAgentStaffOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentStaff", input)
	ret0, _ := ret[0].(interactor.UpdateAgentStaffOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAgentStaff indicates an expected call of UpdateAgentStaff.
func (mr *MockAgentStaffInteractorMockRecorder) UpdateAgentStaff(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentStaff", reflect.TypeOf((*MockAgentStaffInteractor)(nil).UpdateAgentStaff), input)
}

// UpdateAgentStaffAuthority mocks base method.
func (m *MockAgentStaffInteractor) UpdateAgentStaffAuthority(input interactor.UpdateAgentStaffAuthorityInput) (interactor.UpdateAgentStaffAuthorityOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentStaffAuthority", input)
	ret0, _ := ret[0].(interactor.UpdateAgentStaffAuthorityOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAgentStaffAuthority indicates an expected call of UpdateAgentStaffAuthority.
func (mr *MockAgentStaffInteractorMockRecorder) UpdateAgentStaffAuthority(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentStaffAuthority", reflect.TypeOf((*MockAgentStaffInteractor)(nil).UpdateAgentStaffAuthority), input)
}

// UpdateAgentStaffEmail mocks base method.
func (m *MockAgentStaffInteractor) UpdateAgentStaffEmail(input interactor.UpdateAgentStaffEmailInput) (interactor.UpdateAgentStaffEmailOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentStaffEmail", input)
	ret0, _ := ret[0].(interactor.UpdateAgentStaffEmailOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAgentStaffEmail indicates an expected call of UpdateAgentStaffEmail.
func (mr *MockAgentStaffInteractorMockRecorder) UpdateAgentStaffEmail(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentStaffEmail", reflect.TypeOf((*MockAgentStaffInteractor)(nil).UpdateAgentStaffEmail), input)
}

// UpdateAgentStaffNotificationJobSeeker mocks base method.
func (m *MockAgentStaffInteractor) UpdateAgentStaffNotificationJobSeeker(input interactor.UpdateAgentStaffNotificationJobSeekerInput) (interactor.UpdateAgentStaffNotificationJobSeekerOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentStaffNotificationJobSeeker", input)
	ret0, _ := ret[0].(interactor.UpdateAgentStaffNotificationJobSeekerOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAgentStaffNotificationJobSeeker indicates an expected call of UpdateAgentStaffNotificationJobSeeker.
func (mr *MockAgentStaffInteractorMockRecorder) UpdateAgentStaffNotificationJobSeeker(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentStaffNotificationJobSeeker", reflect.TypeOf((*MockAgentStaffInteractor)(nil).UpdateAgentStaffNotificationJobSeeker), input)
}

// UpdateAgentStaffNotificationUnwatched mocks base method.
func (m *MockAgentStaffInteractor) UpdateAgentStaffNotificationUnwatched(input interactor.UpdateAgentStaffNotificationUnwatchedInput) (interactor.UpdateAgentStaffNotificationUnwatchedOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentStaffNotificationUnwatched", input)
	ret0, _ := ret[0].(interactor.UpdateAgentStaffNotificationUnwatchedOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAgentStaffNotificationUnwatched indicates an expected call of UpdateAgentStaffNotificationUnwatched.
func (mr *MockAgentStaffInteractorMockRecorder) UpdateAgentStaffNotificationUnwatched(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentStaffNotificationUnwatched", reflect.TypeOf((*MockAgentStaffInteractor)(nil).UpdateAgentStaffNotificationUnwatched), input)
}

// UpdateAgentStaffPassword mocks base method.
func (m *MockAgentStaffInteractor) UpdateAgentStaffPassword(input interactor.UpdateAgentStaffPasswordInput) (interactor.UpdateAgentStaffPasswordOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentStaffPassword", input)
	ret0, _ := ret[0].(interactor.UpdateAgentStaffPasswordOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAgentStaffPassword indicates an expected call of UpdateAgentStaffPassword.
func (mr *MockAgentStaffInteractorMockRecorder) UpdateAgentStaffPassword(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentStaffPassword", reflect.TypeOf((*MockAgentStaffInteractor)(nil).UpdateAgentStaffPassword), input)
}

// UpdateAgentStaffUsageEnd mocks base method.
func (m *MockAgentStaffInteractor) UpdateAgentStaffUsageEnd(input interactor.UpdateAgentStaffUsageEndInput) (interactor.UpdateAgentStaffUsageEndOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentStaffUsageEnd", input)
	ret0, _ := ret[0].(interactor.UpdateAgentStaffUsageEndOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAgentStaffUsageEnd indicates an expected call of UpdateAgentStaffUsageEnd.
func (mr *MockAgentStaffInteractorMockRecorder) UpdateAgentStaffUsageEnd(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentStaffUsageEnd", reflect.TypeOf((*MockAgentStaffInteractor)(nil).UpdateAgentStaffUsageEnd), input)
}

// UpdateAgentStaffUsageReStart mocks base method.
func (m *MockAgentStaffInteractor) UpdateAgentStaffUsageReStart(input interactor.UpdateAgentStaffUsageReStartInput) (interactor.UpdateAgentStaffUsageReStartOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAgentStaffUsageReStart", input)
	ret0, _ := ret[0].(interactor.UpdateAgentStaffUsageReStartOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAgentStaffUsageReStart indicates an expected call of UpdateAgentStaffUsageReStart.
func (mr *MockAgentStaffInteractorMockRecorder) UpdateAgentStaffUsageReStart(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAgentStaffUsageReStart", reflect.TypeOf((*MockAgentStaffInteractor)(nil).UpdateAgentStaffUsageReStart), input)
}
