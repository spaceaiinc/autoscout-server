// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/interactor/sending_job_seeker_desired_job_information.go
//
// Generated by this command:
//
//	mockgen -source ./usecase/interactor/sending_job_seeker_desired_job_information.go -destination ./mock/mock_interactor/mock_sending_job_seeker_desired_job_information.go
//

// Package mock_interactor is a generated GoMock package.
package mock_interactor

import (
	reflect "reflect"

	interactor "github.com/spaceaiinc/autoscout-server/usecase/interactor"
	gomock "go.uber.org/mock/gomock"
)

// MockSendingJobSeekerDesiredJobInformationInteractor is a mock of SendingJobSeekerDesiredJobInformationInteractor interface.
type MockSendingJobSeekerDesiredJobInformationInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockSendingJobSeekerDesiredJobInformationInteractorMockRecorder
}

// MockSendingJobSeekerDesiredJobInformationInteractorMockRecorder is the mock recorder for MockSendingJobSeekerDesiredJobInformationInteractor.
type MockSendingJobSeekerDesiredJobInformationInteractorMockRecorder struct {
	mock *MockSendingJobSeekerDesiredJobInformationInteractor
}

// NewMockSendingJobSeekerDesiredJobInformationInteractor creates a new mock instance.
func NewMockSendingJobSeekerDesiredJobInformationInteractor(ctrl *gomock.Controller) *MockSendingJobSeekerDesiredJobInformationInteractor {
	mock := &MockSendingJobSeekerDesiredJobInformationInteractor{ctrl: ctrl}
	mock.recorder = &MockSendingJobSeekerDesiredJobInformationInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSendingJobSeekerDesiredJobInformationInteractor) EXPECT() *MockSendingJobSeekerDesiredJobInformationInteractorMockRecorder {
	return m.recorder
}

// CreateMultiSendingJobSeekerDesiredJobInformation mocks base method.
func (m *MockSendingJobSeekerDesiredJobInformationInteractor) CreateMultiSendingJobSeekerDesiredJobInformation(input interactor.CreateMultiSendingJobSeekerDesiredJobInformationInput) (interactor.CreateMultiSendingJobSeekerDesiredJobInformationOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMultiSendingJobSeekerDesiredJobInformation", input)
	ret0, _ := ret[0].(interactor.CreateMultiSendingJobSeekerDesiredJobInformationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMultiSendingJobSeekerDesiredJobInformation indicates an expected call of CreateMultiSendingJobSeekerDesiredJobInformation.
func (mr *MockSendingJobSeekerDesiredJobInformationInteractorMockRecorder) CreateMultiSendingJobSeekerDesiredJobInformation(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMultiSendingJobSeekerDesiredJobInformation", reflect.TypeOf((*MockSendingJobSeekerDesiredJobInformationInteractor)(nil).CreateMultiSendingJobSeekerDesiredJobInformation), input)
}

// GetSendingJobSeekerDesiredJobInformationListBySendingJobSeekerID mocks base method.
func (m *MockSendingJobSeekerDesiredJobInformationInteractor) GetSendingJobSeekerDesiredJobInformationListBySendingJobSeekerID(input interactor.GetSendingJobSeekerDesiredJobInformationListBySendingJobSeekerIDInput) (interactor.GetSendingJobSeekerDesiredJobInformationListBySendingJobSeekerIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSendingJobSeekerDesiredJobInformationListBySendingJobSeekerID", input)
	ret0, _ := ret[0].(interactor.GetSendingJobSeekerDesiredJobInformationListBySendingJobSeekerIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSendingJobSeekerDesiredJobInformationListBySendingJobSeekerID indicates an expected call of GetSendingJobSeekerDesiredJobInformationListBySendingJobSeekerID.
func (mr *MockSendingJobSeekerDesiredJobInformationInteractorMockRecorder) GetSendingJobSeekerDesiredJobInformationListBySendingJobSeekerID(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSendingJobSeekerDesiredJobInformationListBySendingJobSeekerID", reflect.TypeOf((*MockSendingJobSeekerDesiredJobInformationInteractor)(nil).GetSendingJobSeekerDesiredJobInformationListBySendingJobSeekerID), input)
}
