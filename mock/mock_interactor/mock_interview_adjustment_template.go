// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/interactor/interview_adjustment_template.go
//
// Generated by this command:
//
//	mockgen -source ./usecase/interactor/interview_adjustment_template.go -destination ./mock/mock_interactor/mock_interview_adjustment_template.go
//

// Package mock_interactor is a generated GoMock package.
package mock_interactor

import (
	reflect "reflect"

	interactor "github.com/spaceaiinc/autoscout-server/usecase/interactor"
	gomock "go.uber.org/mock/gomock"
)

// MockInterviewAdjustmentTemplateInteractor is a mock of InterviewAdjustmentTemplateInteractor interface.
type MockInterviewAdjustmentTemplateInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockInterviewAdjustmentTemplateInteractorMockRecorder
}

// MockInterviewAdjustmentTemplateInteractorMockRecorder is the mock recorder for MockInterviewAdjustmentTemplateInteractor.
type MockInterviewAdjustmentTemplateInteractorMockRecorder struct {
	mock *MockInterviewAdjustmentTemplateInteractor
}

// NewMockInterviewAdjustmentTemplateInteractor creates a new mock instance.
func NewMockInterviewAdjustmentTemplateInteractor(ctrl *gomock.Controller) *MockInterviewAdjustmentTemplateInteractor {
	mock := &MockInterviewAdjustmentTemplateInteractor{ctrl: ctrl}
	mock.recorder = &MockInterviewAdjustmentTemplateInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterviewAdjustmentTemplateInteractor) EXPECT() *MockInterviewAdjustmentTemplateInteractorMockRecorder {
	return m.recorder
}

// CreateInterviewAdjustmentTemplate mocks base method.
func (m *MockInterviewAdjustmentTemplateInteractor) CreateInterviewAdjustmentTemplate(input interactor.CreateInterviewAdjustmentTemplateInput) (interactor.CreateInterviewAdjustmentTemplateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInterviewAdjustmentTemplate", input)
	ret0, _ := ret[0].(interactor.CreateInterviewAdjustmentTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInterviewAdjustmentTemplate indicates an expected call of CreateInterviewAdjustmentTemplate.
func (mr *MockInterviewAdjustmentTemplateInteractorMockRecorder) CreateInterviewAdjustmentTemplate(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInterviewAdjustmentTemplate", reflect.TypeOf((*MockInterviewAdjustmentTemplateInteractor)(nil).CreateInterviewAdjustmentTemplate), input)
}

// DeleteInterviewAdjustmentTemplate mocks base method.
func (m *MockInterviewAdjustmentTemplateInteractor) DeleteInterviewAdjustmentTemplate(input interactor.DeleteInterviewAdjustmentTemplateInput) (interactor.DeleteInterviewAdjustmentTemplateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInterviewAdjustmentTemplate", input)
	ret0, _ := ret[0].(interactor.DeleteInterviewAdjustmentTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteInterviewAdjustmentTemplate indicates an expected call of DeleteInterviewAdjustmentTemplate.
func (mr *MockInterviewAdjustmentTemplateInteractorMockRecorder) DeleteInterviewAdjustmentTemplate(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInterviewAdjustmentTemplate", reflect.TypeOf((*MockInterviewAdjustmentTemplateInteractor)(nil).DeleteInterviewAdjustmentTemplate), input)
}

// GetInterviewAdjustmentTemplateByID mocks base method.
func (m *MockInterviewAdjustmentTemplateInteractor) GetInterviewAdjustmentTemplateByID(input interactor.GetInterviewAdjustmentTemplateByIDInput) (interactor.GetInterviewAdjustmentTemplateByIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInterviewAdjustmentTemplateByID", input)
	ret0, _ := ret[0].(interactor.GetInterviewAdjustmentTemplateByIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInterviewAdjustmentTemplateByID indicates an expected call of GetInterviewAdjustmentTemplateByID.
func (mr *MockInterviewAdjustmentTemplateInteractorMockRecorder) GetInterviewAdjustmentTemplateByID(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInterviewAdjustmentTemplateByID", reflect.TypeOf((*MockInterviewAdjustmentTemplateInteractor)(nil).GetInterviewAdjustmentTemplateByID), input)
}

// GetInterviewAdjustmentTemplateListByAgentID mocks base method.
func (m *MockInterviewAdjustmentTemplateInteractor) GetInterviewAdjustmentTemplateListByAgentID(input interactor.GetInterviewAdjustmentTemplateListByAgentIDInput) (interactor.GetInterviewAdjustmentTemplateListByAgentIDOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInterviewAdjustmentTemplateListByAgentID", input)
	ret0, _ := ret[0].(interactor.GetInterviewAdjustmentTemplateListByAgentIDOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInterviewAdjustmentTemplateListByAgentID indicates an expected call of GetInterviewAdjustmentTemplateListByAgentID.
func (mr *MockInterviewAdjustmentTemplateInteractorMockRecorder) GetInterviewAdjustmentTemplateListByAgentID(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInterviewAdjustmentTemplateListByAgentID", reflect.TypeOf((*MockInterviewAdjustmentTemplateInteractor)(nil).GetInterviewAdjustmentTemplateListByAgentID), input)
}

// GetInterviewAdjustmentTemplateListByAgentIDAndSendScene mocks base method.
func (m *MockInterviewAdjustmentTemplateInteractor) GetInterviewAdjustmentTemplateListByAgentIDAndSendScene(input interactor.GetInterviewAdjustmentTemplateListByAgentIDAndSendSceneInput) (interactor.GetInterviewAdjustmentTemplateListByAgentIDAndSendSceneOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInterviewAdjustmentTemplateListByAgentIDAndSendScene", input)
	ret0, _ := ret[0].(interactor.GetInterviewAdjustmentTemplateListByAgentIDAndSendSceneOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInterviewAdjustmentTemplateListByAgentIDAndSendScene indicates an expected call of GetInterviewAdjustmentTemplateListByAgentIDAndSendScene.
func (mr *MockInterviewAdjustmentTemplateInteractorMockRecorder) GetInterviewAdjustmentTemplateListByAgentIDAndSendScene(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInterviewAdjustmentTemplateListByAgentIDAndSendScene", reflect.TypeOf((*MockInterviewAdjustmentTemplateInteractor)(nil).GetInterviewAdjustmentTemplateListByAgentIDAndSendScene), input)
}

// UpdateInterviewAdjustmentTemplate mocks base method.
func (m *MockInterviewAdjustmentTemplateInteractor) UpdateInterviewAdjustmentTemplate(input interactor.UpdateInterviewAdjustmentTemplateInput) (interactor.UpdateInterviewAdjustmentTemplateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateInterviewAdjustmentTemplate", input)
	ret0, _ := ret[0].(interactor.UpdateInterviewAdjustmentTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateInterviewAdjustmentTemplate indicates an expected call of UpdateInterviewAdjustmentTemplate.
func (mr *MockInterviewAdjustmentTemplateInteractorMockRecorder) UpdateInterviewAdjustmentTemplate(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateInterviewAdjustmentTemplate", reflect.TypeOf((*MockInterviewAdjustmentTemplateInteractor)(nil).UpdateInterviewAdjustmentTemplate), input)
}
