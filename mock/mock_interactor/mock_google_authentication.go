// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/interactor/google_authentication.go
//
// Generated by this command:
//
//	mockgen -source ./usecase/interactor/google_authentication.go -destination ./mock/mock_interactor/mock_google_authentication.go
//

// Package mock_interactor is a generated GoMock package.
package mock_interactor

import (
	reflect "reflect"

	interactor "github.com/spaceaiinc/autoscout-server/usecase/interactor"
	gomock "go.uber.org/mock/gomock"
)

// MockGoogleAuthenticationInteractor is a mock of GoogleAuthenticationInteractor interface.
type MockGoogleAuthenticationInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockGoogleAuthenticationInteractorMockRecorder
}

// MockGoogleAuthenticationInteractorMockRecorder is the mock recorder for MockGoogleAuthenticationInteractor.
type MockGoogleAuthenticationInteractorMockRecorder struct {
	mock *MockGoogleAuthenticationInteractor
}

// NewMockGoogleAuthenticationInteractor creates a new mock instance.
func NewMockGoogleAuthenticationInteractor(ctrl *gomock.Controller) *MockGoogleAuthenticationInteractor {
	mock := &MockGoogleAuthenticationInteractor{ctrl: ctrl}
	mock.recorder = &MockGoogleAuthenticationInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGoogleAuthenticationInteractor) EXPECT() *MockGoogleAuthenticationInteractorMockRecorder {
	return m.recorder
}

// GetGoogleAuthCodeURL mocks base method.
func (m *MockGoogleAuthenticationInteractor) GetGoogleAuthCodeURL(input interactor.GetGoogleAuthCodeURLInput) (interactor.GetGoogleAuthCodeURLOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGoogleAuthCodeURL", input)
	ret0, _ := ret[0].(interactor.GetGoogleAuthCodeURLOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGoogleAuthCodeURL indicates an expected call of GetGoogleAuthCodeURL.
func (mr *MockGoogleAuthenticationInteractorMockRecorder) GetGoogleAuthCodeURL(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGoogleAuthCodeURL", reflect.TypeOf((*MockGoogleAuthenticationInteractor)(nil).GetGoogleAuthCodeURL), input)
}

// UpdateGoogleOauthToken mocks base method.
func (m *MockGoogleAuthenticationInteractor) UpdateGoogleOauthToken(input interactor.UpdateGoogleOauthTokenInput) (interactor.UpdateGoogleOauthTokenOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateGoogleOauthToken", input)
	ret0, _ := ret[0].(interactor.UpdateGoogleOauthTokenOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateGoogleOauthToken indicates an expected call of UpdateGoogleOauthToken.
func (mr *MockGoogleAuthenticationInteractorMockRecorder) UpdateGoogleOauthToken(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateGoogleOauthToken", reflect.TypeOf((*MockGoogleAuthenticationInteractor)(nil).UpdateGoogleOauthToken), input)
}
