# name: Go Build
# on:
#   push:
#     branches:
#       - develop
#       - main
#   pull_request:
#     branches:
#       - develop
# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-go@v4
#         id: setup-go
#         with:
#           go-version-file: "go.mod"
#       - name: Download Go modules
#         shell: bash
#         if: ${{ steps.setup-go.outputs.cache-hit != 'true' }}
#         run: go mod download

#       - name: Build
#         # リリース時にバージョンを変更
#         run: go build -v -ldflags="-s -w -X main.version=12.3.0"

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-northeast-1

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

#       - name: Logout of Amazon ECR
#         if: always()
#         run: docker logout ${{ steps.login-ecr.outputs.registry }}

#       - name: Slack Notification
#         if: success()
#         uses: rtCamp/action-slack-notify@v2
#         env:
#           SLACK_CHANNEL: docker-image
#           SLACK_COLOR: "#3278BD"
#           # SLACK_ICON:
#           SLACK_MESSAGE: "Pushed latest image :rocket: tag => ${{ github.sha }} "
#           SLACK_TITLE: GitHub Action
#           SLACK_USERNAME: Gilfoyle
#           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

#       - name: Slack Notification
#         if: failure()
#         uses: rtCamp/action-slack-notify@v2
#         env:
#           SLACK_CHANNEL: docker-image
#           SLACK_COLOR: "#C7474D"
#           # SLACK_ICON:
#           SLACK_MESSAGE: "Failed to build and push image...!!"
#           SLACK_TITLE: GitHub Action
#           SLACK_USERNAME: Gilfoyle
#           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
